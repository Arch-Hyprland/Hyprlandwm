(defpoll entrys :interval "10m" `export GTK_THEME=WhiteSur; ../bin/app-service app`)

(defwidget appItem[name cmd icon size] 
  (box :orientation "h" :space-evenly true :class "app-detail" 
    (eventbox :class "app-item" 
      (box :orientation 'v' :space-evenly false :style "padding: 25px 20px" 
        (eventbox :onhover "" 
                  :onhoverlost ""
                  :onclick "${cmd} & ../scripts/applaucher.sh &" 
                  :cursor "pointer"
                  :class "app-icon"
          (transform 
            (image :path "${icon}" :class "icon" 
              :icon-size "dialog" 
              :image-width "80" 
              :image-height "80"
            )
          )
        )
        (label :text name :class "app-name" 
              :limit-width 10
        )
      )
    )
  )
)



(defwidget searchbar[]
  (eventbox :class "category" :width "300"
    (box :orientation "v" :space-evenly true 
      (box 
        (input)
      )
      (box 
        (image :icon "bash-symbolic" :icon-size "large-toolbar")
        (label :text "Command")
      )
      (box 
        (image :icon "filemanager-app-symbolic" :icon-size "large-toolbar")
        (label :text "Command")
      )
      (box 
        (image :icon "find-location-symbolic" :icon-size "large-toolbar")
        (label :text "Command")
      )
      (box 
        (image :icon "sms-symbolic" :icon-size "large-toolbar")
        (label :text "Command")
      )
      (box 
        (image :icon "palette-symbolic" :icon-size "large-toolbar")
        (label :text "Command")
      )
    )
  )
) 

(defwidget container[]
  (box :class "container" :hexpand true
    (scroll :vscroll true :hscroll false :class "app-scroll"
      (box :orientation "v" :space-evenly true :class "app-box" 
           :valign "start" 
           :halign "center"
           :hexpand "true"
        (for entry in {entrys?:[]} 
          (box :orientation "h" :space-evenly true :class "app-box" 
               :valign "start" 
               :hexpand "true"
            (for app in entry
              (appItem :name "${app['name']}" :cmd "${app['cmd']}" :icon "${app['icon']}" :size "${app['size']}")
            )
          )
        )
      )
    )
  )
)

(defwidget AppLaunch[] 
  (box :orientation "h" :space-evenly false :class "launcher" 
    (searchbar)
    (container)
  )
)

;; ** Windows *************************************************************************

(defwindow AppLauncher
        :geometry (geometry :x "0" 
                            :y "0"  
                            :width "60%"
                            :height "60%"
                            :anchor "center center")
        :exclusive false
        :stacking "fg"
        :focusable false
        :namespace "eww-widget"
(AppLaunch))
